AWSTemplateFormatVersion: '2010-09-09'
Description: Minimal template to associate a WAF Web ACL with an ALB.

Parameters:
  LoadBalancerARN:      
    Type: String
    Description: The ARN of the Application Load Balancer

  # BlockedRequestAlarmThreshold:
  #   Type: Number
  #   Default: 5
  #   Description: Threshold for the cloud alarm to trigger an action for blocked request.

  # AllowedRequestAlarmThreshold:
  #   Type: Number
  #   Default: 20
  #   Description: Threshold for the cloud alarm to trigger an action for blocked request.

  RateLimitRuleThreshold:
    Type: Number
    Default: 500
    Description: Threshold for the rate limiting rule

  BlacklistIPAddresses:
    Type: CommaDelimitedList  # Allows a comma-separated list of IP addresses or CIDR ranges
    Description: "Enter the IP addresses or CIDR ranges to block in the WAF IPSet."
    Default: "107.115.17.43/32"  # Example default IPs to block

Resources:


  IPSetBlacklist:
    Type: AWS::WAFv2::IPSet
    Properties:
      Name: BlacklistIPSet
      Scope: REGIONAL  # GLOBAL if used with CloudFront
      IPAddressVersion: IPV4
      Addresses: !Ref BlacklistIPAddresses 
    
      Description: "IP addresses to block"

  WebACL:
    Type: AWS::WAFv2::WebACL
    Properties: 
      DefaultAction: 
        Allow: {}  # Default action for requests not matching any rule.
      Name: EcommerceWAFACL
      Scope: REGIONAL
      VisibilityConfig: 
        SampledRequestsEnabled: true
        CloudWatchMetricsEnabled: true
        MetricName: EcommerceWAFACLMetric
      Rules:
      
        ######### Assigned  AWS Managed rules manually 

     
        - Name: RateLimitRule
          Action:
            Block: {}
          Priority: 1
          Statement:
            RateBasedStatement:
              Limit: !Ref RateLimitRuleThreshold
              AggregateKeyType: IP
          VisibilityConfig: 
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: RateLimitRuleMetric



        - Name: BlockBadIPsRule
          Action:
            Block: {}
          Priority: 2
          Statement:
            IPSetReferenceStatement:
              Arn: !GetAtt IPSetBlacklist.Arn
          VisibilityConfig: 
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: BlockBadIPsRuleMetric
            # AndStatement:
            #   Statements:
            #     - IPSetReferenceStatement:
            #         Arn: !GetAtt IPSetBlacklist.Arn
            #     - NotStatement:
            #         Statement:
            #           GeoMatchStatement:
            #             CountryCodes:
            #               - US
            #               - CA

        

  WebACLAssociation:
    Type: AWS::WAFv2::WebACLAssociation
    Properties:
      ResourceArn: !Ref LoadBalancerARN
      WebACLArn: !GetAtt WebACL.Arn


  # SNS Topic for CloudWatch Alarm Notifications
  AlarmSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: EcommerceApplicationAlarmNotification

  # Subscription to receive email notifications
  AlarmEmailSubscription:
    Type: AWS::SNS::Subscription
    DependsOn: AlarmSNSTopic  # Ensure SNS Topic is created first
    Properties:
      TopicArn: !Ref AlarmSNSTopic
      Protocol: email  # Notification type: email
      Endpoint: "tarang98@umd.edu"  # Replace with your email address

  # Subscription to receive SMS notifications
  AlarmSMSSubscription:
    Type: AWS::SNS::Subscription
    DependsOn: AlarmSNSTopic  # Ensure SNS Topic is created first
    Properties:
      TopicArn: !Ref AlarmSNSTopic
      Protocol: sms  # Notification type: SMS
      Endpoint: "+15713855625"  # Replace with your phone number


  #### Setting up cloud alarms manually due to some issues




  # CloudWatch Alarm for Blocked Requests
  # It sets up a CloudWatch alarm to monitor a particular metric and trigger actions if the threshold is crossed.
  # WAFAllowedRequestsAlarm:  
  #   Type: AWS::CloudWatch::Alarm
  #   Properties:
  #     AlarmName: WAFAllowedRequestsAlarm
  #     MetricName: AllowedRequests
  #     Namespace: AWS/WAFV2
  #     Dimensions:
  #       - Name: WebACL
  #         Value: EcommerceWAFACL 
  #     Statistic: Sum
  #     Period: 30
  #     EvaluationPeriods: 1
  #     Threshold: !Ref AllowedRequestAlarmThreshold 
  #     ComparisonOperator: GreaterThanOrEqualToThreshold
  #     TreatMissingData: notBreaching
  #     AlarmActions:
  #       - !Ref AlarmSNSTopic  # SNS Topic for the alarm actions


  # WAFBlockedRequestsAlarm:
  #   Type: AWS::CloudWatch::Alarm
  #   Properties:
  #     AlarmName: WAFBlockedRequestsAlarm
  #     MetricName: BlockedRequests
  #     Namespace: AWS/WAFV2
  #     Dimensions:
  #       - Name: WebACL
  #         Value: EcommerceWAFACL 
  #     Statistic: Sum
  #     Period: 300
  #     EvaluationPeriods: 1
  #     Threshold: !Ref BlockedRequestAlarmThreshold
  #     ComparisonOperator: GreaterThanOrEqualToThreshold
  #     TreatMissingData: notBreaching
  #     AlarmActions:
  #       - !Ref AlarmSNSTopic  # SNS Topic for the alarm actions



  ## Setting up logging manually


  # WAFLoggingConfiguration:
  #   Type: AWS::WAFv2::LoggingConfiguration
  #   Properties:
  #     ResourceArn: !GetAtt WebACL.Arn
  #     LogDestinationConfigs:
  #       - arn:aws:s3:::my-ecommerce-waf-logs-bucket
     
       

Outputs:
  WebACLArn:
    Description: The ARN of the WAF Web ACL
    Value: !GetAtt WebACL.Arn
